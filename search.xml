<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Markdown语法]]></title>
    <url>%2F2017%2F05%2F16%2FMarkdown%E8%AF%AD%E6%B3%95%2F</url>
    <content type="text"><![CDATA[Line BreaksTo force a line break, put two spaces and a newline (return) at the end of the line. This two-line bulletwon’t break This two-line bulletwill break Here is the code: 12345* This two-line bullet won&apos;t break* This two-line bullet will break Strong and EmphasizeStrong: **Strong** or __Strong__ (Command-B)Emphasize: *Emphasize* or _Emphasize_[^emphasize] (Command-I) Headers (like this one!)Header 1 ======== Header 2 -------- or # Header 1 ## Header 2 ### Header 3 #### Header 4 ##### Header 5 ###### Header 6 Links and EmailInlineJust put angle brackets around an email and it becomes clickable: &#117;&#x72;&#97;&#110;&#117;&#x73;&#106;&#114;&#x40;&#103;&#109;&#x61;&#105;&#x6c;&#x2e;&#x63;&#111;&#109;&lt;uranusjr@gmail.com&gt; Same thing with urls: http://macdown.uranusjr.com&lt;http://macdown.uranusjr.com&gt; Perhaps you want to some link text like this: Macdown Website[Macdown Website](http://macdown.uranusjr.com &quot;Title&quot;) (The title is optional) Reference styleSometimes it looks too messy to include big long urls inline, or you want to keep all your urls together. Make a link [a link][arbitrary_id] then on it’s own line anywhere else in the file:[arbitrary_id]: http://macdown.uranusjr.com &quot;Title&quot; If the link text itself would make a good id, you can link like this [like this][], then on it’s own line anywhere else in the file:[like this]: http://macdown.uranusjr.com ImagesInline![Alt Image Text](path/or/url/to.jpg &quot;Optional Title&quot;) Reference style![Alt Image Text][image-id]on it’s own line elsewhere:[image-id]: path/or/url/to.jpg &quot;Optional Title&quot; Lists Lists must be preceded by a blank line (or block element) Unordered lists start each item with a * - works too Indent a level to make a nested list Ordered lists are supported. Start each item (number-period-space) like 1. It doesn’t matter what number you use, I will render them sequentially So you might want to start each line with 1. and let me sort it out Here is the code: 12345678* Lists must be preceded by a blank line (or block element)* Unordered lists start each item with a `*`- `-` works too * Indent a level to make a nested list 1. Ordered lists are supported. 2. Start each item (number-period-space) like `1. ` 42. It doesn&apos;t matter what number you use, I will render them sequentially 1. So you might want to start each line with `1.` and let me sort it out Block Quote Angle brackets &gt; are used for block quotes.Technically not every line needs to start with a &gt; as long asthere are no empty lines between paragraphs.Looks kinda ugly though. Block quotes can be nested. Multiple Levels Most markdown syntaxes work inside block quotes. Lists Links Etc. Here is the code: 123456789101112&gt; Angle brackets `&gt;` are used for block quotes. Technically not every line needs to start with a `&gt;` as long asthere are no empty lines between paragraphs. &gt; Looks kinda ugly though.&gt; &gt; Block quotes can be nested. &gt; &gt; &gt; Multiple Levels&gt;&gt; Most markdown syntaxes work inside block quotes.&gt;&gt; * Lists&gt; * [Links][arbitrary_id]&gt; * Etc. Inline CodeInline code is indicated by surrounding it with backticks:`Inline code` If your code has `backticks` that need to be displayed, you can use double backticks:``Code with `backticks` `` (mind the spaces preceding the final set of backticks) Block CodeIf you indent at least four spaces or one tab, I’ll display a code block. print(&apos;This is a code block&apos;) print(&apos;The block must be preceded by a blank line&apos;) print(&apos;Then indent at least 4 spaces or 1 tab&apos;) print(&apos;Nesting does nothing. Your code is displayed Literally&apos;) I also know how to do something called Fenced Code Blocks which I will tell you about later. Horizontal RulesIf you type three asterisks *** or three dashes --- on a line, I’ll display a horizontal rule:]]></content>
      <categories>
        <category>折腾</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CSS实现三角形图标]]></title>
    <url>%2F2016%2F05%2F12%2FCSS%E5%AE%9E%E7%8E%B0%E4%B8%89%E8%A7%92%E5%BD%A2%E5%9B%BE%E6%A0%87%2F</url>
    <content type="text"><![CDATA[最近在尝试做一个聊天室的demo，在样式设计上我一直都很好奇泡泡框后面的小尾巴是怎么实现的－。－，简直神奇，于是我去百，哦不谷歌了一下首先把元素的宽高设置为01234.caret&#123;width:0px;height:0px;&#125; 然后改变它的boder样式1234567.caret&#123;width:0px;height:0px;border-top: 40px solid red;border-right: 40px solid transparent;border-left: 40px solid transparent;&#125; 五体投地，膝盖都碎了，可是为啥？？？我们先做个实验，把样式改成12345678.caret&#123;width:0px;height:0px;border-top: 40px solid red;border-right: 40px solid black;border-left: 40px solid black;border-bottom: 40px solid red;&#125; 我们再把下边框去掉1234567.caret&#123;width:0px;height:0px;border-top: 40px solid red;border-right: 40px solid blackborder-left: 40px solid black;&#125; 这下诸君大概知道第一个三角形怎么来的了吧，把左右边框透明就行另外如果我门修改border的px值，还会得到很多其他不同形状的三角形]]></content>
      <categories>
        <category>前端基础</category>
      </categories>
      <tags>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo折腾笔记(一)]]></title>
    <url>%2F2016%2F04%2F14%2FHexo%E6%8A%98%E8%85%BE%E7%AC%94%E8%AE%B0-%E4%B8%80%2F</url>
    <content type="text"><![CDATA[一直都想给自己搭一个技术博客来记(zhuang)录(bi)，但是自己太忙(lan)了，最近折腾前端的时候经常能解锁新的姿势，但是苦于没有记录的地方，所以为了以后方便自己复习，同时为了提高自己的写作表达能力，我决定是时候给自己搭一个博客了，搭建步骤： 环境Node，Git，Github(用来做博客的远程创库、域名、服务器之类的,注意一定要验证Github的验证邮件.) 安装Hexo环境配置好后，建一个文件夹用来存放hexo配置文件，然后安装hexo12$ cd 新建文件夹$ npm install hexo -g 执行init命令初始化hexo1$ hexo init 生成静态页面1$ hexo generate 启动本地服务，进行文章预览调试1$ hexo server 提示Hexo is running at http://localhost:4000/在浏览器输入http://localhost:4000不出意外的话，它应该是像下图这个样子的（图片来源于网络） 配置github登陆Github账号后，点击右上角的“+”号按钮，选择“New repository”新建github仓库，命名为[your_user_name.github.io]远程代码是基于SSH的，所以需要SSH的相关配置。方法是现在本地生成SSH公钥，然后添加到Github上面。具体的操作如下：(1)设置你的邮箱和用户名：12$ git config --global user.email "你的邮箱"$ git config --global user.name "你的名字" (2)生成密钥,设置密码,输入的密码不会显示（也可以不设置，按三次回车，密码为空）1$ ssh-keygen -t rsa -C "你的邮箱" (终端提示生成的文件路径)找到id_rsa.pub用终端进入编辑，复制生成的密钥。登陆Github,点击右侧用户按钮，选择Settings,点击 Add SSH key 按钮，将复制的密钥粘贴到 Key 栏. 在之前安装的hexo的文件夹中，找到_config.yml打开（vim或者文本打开都行）在文件最下面，修改成这样： deploy: type: git repo: git@github.com:your_user_name/your_user_name.github.io.git branch: master 我的hexo版本是3.2.0，这样配置应该没问题，type：github或着其他的不同的配置应该是较低版本的hexo的设置。然后执行命令：12$ npm install hexo-deployer-git--save$ hexo deploy 然后再浏览器中输入http://your_user_name.github.io/就能访问你的博客了]]></content>
      <categories>
        <category>折腾</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2016%2F04%2F13%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>